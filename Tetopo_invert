% ========================================================================
%  GdSbTe_invert_gui.m   (2025‑06‑16, ChatGPT‑o3)
%  --------------------------------------------------------------
%  * 反演 Te‑doping 分佈，適用於『grid → Tetopo』後的 2n×2n 矩陣
%  * 依賴外部 GUI： effdiag_calib_gui.m
%      ‑ 該 GUI 會把  Te_amp 與 Eff_diag  丟回 Workspace
%  * 如果 Workspace 尚未有 Te_amp / Eff_diag → 會自動呼叫 GUI
%  * 主程式完成後，把  Q_sim  與  CCtotal  丟回 Workspace
% ========================================================================

%% 0. 前置檢查 -----------------------------------------------------------
if ~evalin('base','exist("Tetopo","var")')
    error('找不到 Tetopo。請先把 grid 轉成 Tetopo 並載入 Workspace。');
end
Tetopo = evalin('base','Tetopo');
%% 0.1 推算尺寸與模板 ---------------------------------------------------
[rows, cols] = size(Tetopo);
if rows ~= cols || mod(rows,2) ~= 0
    error('Tetopo 必須為 2n×2n 的正方形矩陣！');
end
n    = rows / 2;
Te   = [0 1; 0 0];           % 單元 2×2 Te 鋪排
TeTe = repmat(Te, n);
D    = [0 0; 1 0];           % row 奇、col 偶 → 1
DD   = repmat(D, n);         % 合法放 dopant 的位置遮罩

%% === 讓使用者輸入 Doping, Alpha, Beta =========================
param = param_gui();            % 這是我們等會兒加在檔尾的函式
%%!!!!!!!!!!!!!!!!%%%
targetConc = param.doping*2;      % 取代原本 targetConc = 0.13; 注意輸出的是Gd 所以是兩倍  不是Te doping in Sb  doping map
%%!!!!!!!!!!!!!!!!%%%
alpha      = param.alpha;       % 取代原本 alpha = 1;
beta       = param.beta;        % 取代原本 beta  = 50;

Te   = [0 1; 0 0];            % 單元 2×2 Te 鋪排
TeTe = repmat(Te, n);
%% 0.1 自動估計 Te_amp 並給預設 Eff_diag
vals = Tetopo(Tetopo>0);
[~,C] = kmeans(vals(:),2,'Replicates',5);
init_amp = max(C);          % 作為起始猜測
init_eff = 0.08;            %  〃
% --- 用 fminsearch 同時掃 (amp, eff) 兩個參數 ----------------------
obj = @(x) joint_obj(x, Tetopo, TeTe, param.doping, ...
                     param.alpha, param.beta);
xopt = fminsearch(obj, [init_amp, init_eff], optimset('Display','iter'));
Te_amp  = xopt(1);
Eff_diag = xopt(2);
fprintf('[Calib] best Te_amp = %.4f , Eff_diag = %.4f\n', Te_amp, Eff_diag);

Tetopo = Tetopo / Te_amp;     % ← 一定要放在 fminsearch 之後！
assignin('base','Te_amp',  Te_amp);
assignin('base','Eff_diag',Eff_diag);

fprintf('[Info] 自動估得 Te_amp = %.4f,  Eff_diag = %.4f\\n',Te_amp,Eff_diag);





%% 3. Recover Q ----------------------------------------------------------
Q = (Tetopo - TeTe) / -3;
figure; imagesc(Q); axis image off; colormap(parula); colorbar; title('Recovered Q');

%% 4. Forward 模擬重建 CCtotal ------------------------------------------
CCtotal = zeros(rows, cols);
Q_sim  = zeros(rows, cols);
max_iter = 4;

for iter = 1:max_iter
    Q_diff_iter = Q - Q_sim;
    candidates = [];

    % 4‑1 產生 candidate 清單
    for i = 2:rows-1
        if mod(i,2) ~= 0, continue; end   % 只取合法行 (row 偶 => pix row 奇)
        for j = 2:cols-1
            diag_vals = [Q_diff_iter(i-1,j-1), Q_diff_iter(i-1,j+1), ...
                          Q_diff_iter(i+1,j-1), Q_diff_iter(i+1,j+1)];
            mean_diag = mean(diag_vals);
            std_diag  = std(diag_vals);
            bonus = double(CCtotal(i,j) == 1);

            if abs(mean_diag) > Eff_diag*1.2 && std_diag < 1e-3
                score = abs(mean_diag);
                add   = 2;                         % 疊加兩顆缺陷
            else
                score = sum(abs(diag_vals - Eff_diag*CCtotal(i,j))) + 0.5*bonus;
                add   = 1;                         % 一顆缺陷
            end
            candidates(end+1,:) = [i, j, score, add]; %#ok<AGROW>
        end
    end
    [~, idx] = sort(candidates(:,3), 'descend');
    candidates = candidates(idx,:);

    % 4‑2 依序嘗試加入缺陷
    for c = 1:size(candidates,1)
        i = candidates(c,1); j = candidates(c,2); add = candidates(c,4);
        if CCtotal(i,j) + add > 2, continue; end

        temp_Q = Q_sim;
       temp_Q(i-1:2:i+1, j-1:2:j+1) = ...
            temp_Q(i-1:2:i+1, j-1:2:j+1) + Eff_diag*add;   % 四角 +Eff

        err_before = sum(abs(Q(i-1:i+1,j-1:j+1) - Q_sim (i-1:i+1,j-1:j+1)),'all');
        err_after  = sum(abs(Q(i-1:i+1,j-1:j+1) - temp_Q(i-1:i+1,j-1:j+1)),'all');

        if err_after < err_before - 0.005
            CCtotal(i,j)  = CCtotal(i,j) + add;
            Q_sim         = temp_Q;
        end
    end

    % 4‑3 孤立缺陷 → 向最近合法鄰點複製一顆 (保持連通)
    offsets = [-2 0; 2 0; 0 -2; 0 2];
    for ii = 3:rows-2
        for jj = 3:cols-2
            if CCtotal(ii,jj)==0, continue; end
            if ~(CCtotal(ii-2,jj)|CCtotal(ii+2,jj)|CCtotal(ii,jj-2)|CCtotal(ii,jj+2))
                for k=1:4
                    ni = ii + offsets(k,1); nj = jj + offsets(k,2);
                    if ni>2 && ni<rows-1 && nj>2 && nj<cols-1 && CCtotal(ni,nj)<=2
                        CCtotal(ni,nj) = CCtotal(ni,nj) + 1;
                        Q_sim(ni-1:2:ni+1 , nj-1:2:nj+1) = ...
                            Q_sim(ni-1:2:ni+1 , nj-1:2:nj+1) + Eff_diag;
                        break;
                    end
                end
            end
        end
    end
end

figure; imagesc(Q - Q_sim); axis image off; colormap(parula); colorbar; title('Q - Q_{sim}');
figure; imagesc(CCtotal); axis image off; colormap(parula); colorbar; title('CCtotal');
 
%% 5. 主優化迴圈（粗調 2 cycle）-----------------------------------------
for cycle = 1:2
    % -- 5.1 由 CCtotal 重新生成 Q_from_CC
    Q_from_CC = zeros(rows, cols);
    for i = 2:rows-1
        for j = 2:cols-1
            if CCtotal(i,j) > 0
                               Q_from_CC(i-1:2:i+1, j-1:2:j+1) = ...
                    Q_from_CC(i-1:2:i+1, j-1:2:j+1) + Eff_diag*CCtotal(i,j);
            end
        end
    end
    Q_diff = Q - Q_from_CC;

    % -- 5.2 根據多重對稱性反推出 CCtotal_diff
    CCtotal_diff = infer_ccdiff(Q_diff, Eff_diag, DD);

    % -- 5.3 更新 CCtotal
    CCtotal = CCtotal - CCtotal_diff;
    CCtotal(CCtotal<0)=0; CCtotal(CCtotal>2)=2;

    figure; imagesc(CCtotal); axis image off; colormap(parula); colorbar;
    title(sprintf('Updated CCtotal (Cycle %d)',cycle));
end

%% 6. 最終輸出 -----------------------------------------------------------
doping_rate = sum(CCtotal(DD > 0), 'all') / nnz(DD);
fprintf('[Info] estimated doping = %.4f (target %.4f)\n', ...
        doping_rate, targetConc);
%CCtotal = CCtotal / 10;    
CCtotal = CCtotal  ;             % 按需求縮放 (保持舊習慣)
assignin('base','Q_sim',    Q_sim);
assignin('base','CCtotal', CCtotal);
fprintf('[Done] 變數 Q_sim 與 CCtotal 已傳回 Workspace.\n');

% ========================================================================
% ↓↓↓ 補助函式：infer_ccdiff (四角╱左右╱上下 對稱擬合)  ↓↓↓
% ========================================================================
function CCtotal_diff = infer_ccdiff(Q_diff, Eff_diag, DD)
    [rows,cols] = size(Q_diff);
    CCtotal_diff = zeros(rows,cols);
    th = 1e-4;   Qtmp = Q_diff;

    % -- A. 四角對稱 ----------------------------------------
    for i = 2:rows-1
        for j = 2:cols-1
            if all(abs(Qtmp(i+[-1 1],j+[-1 1])) > th, 'all')
                vals = [Qtmp(i-1,j-1), Qtmp(i-1,j+1), Qtmp(i+1,j-1), Qtmp(i+1,j+1)];
                if std(vals) < 5e-3
                    CCtotal_diff(i,j)   = mean(vals)/Eff_diag;
                    Qtmp(i+[-1 1], j+[-1 1]) = 0;
                end
            end
        end
    end

    % -- B. 左右對稱 ----------------------------------------
    for i = 3:rows-2
        for j = 3:cols-2
            if abs(Qtmp(i,j-1))>th && abs(Qtmp(i,j+1))>th && abs(Qtmp(i,j-1)-Qtmp(i,j+1))<5e-3
                CCtotal_diff(i,j) = Qtmp(i,j-1)/Eff_diag;
                Qtmp(i,j+[-1 1]) = 0;
            end
        end
    end

    % -- C. 上下對稱 ----------------------------------------
    for i = 3:rows-2
        for j = 3:cols-2
            if abs(Qtmp(i-1,j))>th && abs(Qtmp(i+1,j))>th && abs(Qtmp(i-1,j)-Qtmp(i+1,j))<5e-3
                CCtotal_diff(i,j) = Qtmp(i-1,j)/Eff_diag;
                Qtmp(i+[-1 1],j) = 0;
            end
        end
    end

    % -- D. 套用遮罩並四捨五入限制範圍 ----------------------
    CCtotal_diff = round(CCtotal_diff .* DD);
    CCtotal_diff(CCtotal_diff>2)=2; CCtotal_diff(CCtotal_diff<-2)=-2;
end
function p = param_gui
h = uifigure('Name','參數設定','Position',[400 400 240 240]);

uilabel(h,'Position',[20 180 80 22],'Text','Doping');
edtD = uieditfield(h,'numeric','Position',[110 180 80 22], ...
                   'Limits',[0 1],'Value',0.13);

uilabel(h,'Position',[20 130 80 22],'Text','Alpha');
edtA = uieditfield(h,'numeric','Position',[110 130 80 22],'Value',1);

uilabel(h,'Position',[20 80 80 22],'Text','Beta');
edtB = uieditfield(h,'numeric','Position',[110 80 80 22],'Value',50);

btnOK = uibutton(h,'Text','OK','Position',[70 30 100 30], ...
         'ButtonPushedFcn',@(~,~) uiresume(h));

% 讓按 ✕ 也能安全關閉
h.CloseRequestFcn = @(~,~) uiresume(h);

uiwait(h);                        % 等你按 OK 或 ✕
p.doping = edtD.Value;
p.alpha  = edtA.Value;
p.beta   = edtB.Value;
delete(h);                        % 關掉視窗
end
% =====================================================================
%  joint_obj  ——  同時最佳化 Te_amp (x(1)) 與 Eff_diag (x(2))
% =====================================================================
function f = joint_obj(x, Tetopo, TeTe, tgtConc, alpha, beta)
amp = x(1);   eff = x(2);
if amp<=0 || eff<=0        % 非法範圍直接給 ∞
    f = Inf;  return;
end

% 1. 以 amp 歸一化
%Tn = Tetopo / amp;
Tn =  amp;  %比較好

% 2. 快速評估殘差（不跑完整 forward，速度快很多）
Q = (Tn - TeTe) / -3;
residual = sum(abs(Q(:)));     % 權重用 alpha

% 3. 粗估濃度：在合法格點上，峰值 > 0.5 視為 dopant
mask = mod((1:size(Tn,1))',2)==1 & mod(1:size(Tn,2),2)==0;
pk   = Tn(mask);
doping_est = nnz(pk > 0.5) / numel(pk);

% 4. 目標函式
f = alpha * residual + beta * abs(doping_est - tgtConc);
end
